{"version":3,"sources":["components/Header.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","Posts","posts","isLoading","map","post","author","id","App","useState","setPosts","setLoading","useEffect","axios","get","then","res","newPosts","data","children","obj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAQeA,EARA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACI,iCACI,oBAAIC,UAAU,YAAd,SAA2BD,OCaxBE,EAhBD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,UACnB,OACI,qBAAKH,UAAU,OAAf,SACI,6BACKG,EACG,2CAEJD,EAAME,KAAI,SAAAC,GACR,OAAO,+BAAkB,4BAAIA,EAAKN,QAAU,mCAAMM,EAAKC,YAAvCD,EAAKE,YC6BxBC,EA7BH,WAGV,MAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAgCD,oBAAS,GAAzC,mBAAON,EAAP,KAAkBQ,EAAlB,KAiBA,OAFAC,qBAZmB,WAEjBD,GAAW,GACXE,IAAMC,IAAI,yCACPC,MAAK,SAAAC,GACJ,IAAMC,EAAWD,EAAIE,KAAKA,KAAKC,SAASf,KAAI,SAAAgB,GAAG,OAAIA,EAAIF,QACvDR,EAASO,GACTN,GAAW,QAKK,IAGpB,sBAAKX,UAAU,6BAAf,UACI,cAAC,EAAD,CAAQD,MAAM,eACd,cAAC,EAAD,CAAOG,MAAOA,EAAOC,UAAWA,QCpBzBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0f9857b9.chunk.js","sourcesContent":["const Header = ({title}) => {\n    return (\n        <header>\n            <h1 className='display-4'>{title}</h1>\n        </header>\n    )\n}\n\nexport default Header\n","const Posts = ({posts, isLoading}) => {\n    return (\n        <div className='mt-5'>\n            <ul>\n                {isLoading ?\n                    <p>Loading...</p>\n                :\n                posts.map(post => {\n                  return <li key={post.id}><p>{post.title}</p><p>- {post.author}</p></li>\n                })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Posts\n","import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Import Components\nimport Header from './components/Header';\nimport Posts from './components/Posts';\n\nconst App = () => {\n\n  //Set state   \n  const [posts, setPosts] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  //Function that gets API Data\n  const getAPIData = () => {\n    //Reset loading state to true\n    setLoading(true);\n    axios.get('https://www.reddit.com/r/reactjs.json')\n      .then(res => {\n        const newPosts = res.data.data.children.map(obj => obj.data);\n        setPosts(newPosts);\n        setLoading(false);\n      })\n  }\n\n  //Use Effect hook to load API data on page load\n  useEffect(getAPIData, []);\n\n  return (\n    <div className='container text-center mt-5'>\n        <Header title='/r/reactjs'/>\n        <Posts posts={posts} isLoading={isLoading}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}